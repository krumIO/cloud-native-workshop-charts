apiVersion: v1
items:
- apiVersion: neuvector.com/v1
  kind: NvSecurityRule
  metadata:
    name: nv.development-baseline-vue-baseline-vue-app.development
    namespace: development
  spec:
    dlp:
      settings: []
      status: true
    egress: []
    file: []
    ingress:
    - action: allow
      applications:
      - HTTP
      name: nv.development-baseline-vue-baseline-vue-app.development-ingress-0
      ports: any
      priority: 0
      selector:
        comment: ""
        criteria: []
        name: nodes
        original_name: ""
    - action: allow
      applications:
      - HTTP
      - SSL
      name: nv.development-baseline-vue-baseline-vue-app.development-ingress-1
      ports: any
      priority: 0
      selector:
        comment: ""
        criteria: []
        name: external
        original_name: ""
    - action: allow
      applications:
      - HTTP
      name: nv.development-baseline-vue-baseline-vue-app.development-ingress-2
      ports: any
      priority: 0
      selector:
        comment: ""
        criteria:
        - key: service
          op: =
          value: rke2-ingress-nginx-controller.kube-system
        - key: domain
          op: =
          value: kube-system
        name: nv.rke2-ingress-nginx-controller.kube-system
        original_name: ""
    process:
    - action: allow
      allow_update: false
      name: nginx
      path: /usr/sbin/nginx
    - action: allow
      allow_update: false
      name: pause
      path: /pause
    process_profile:
      baseline: zero-drift
    target:
      policymode: Protect
      selector:
        comment: ""
        criteria:
        - key: service
          op: =
          value: development-baseline-vue-baseline-vue-app.development
        - key: domain
          op: =
          value: development
        name: nv.development-baseline-vue-baseline-vue-app.development
        original_name: ""
    waf:
      settings: []
      status: true
- apiVersion: neuvector.com/v1
  kind: NvSecurityRule
  metadata:
    name: nv.development-baseline-golang-baseline-golang-app.development
    namespace: development
  spec:
    dlp:
      settings: []
      status: true
    egress: []
    file: []
    ingress: []
    process:
    - action: allow
      allow_update: false
      name: main
      path: /app/bin/main
    - action: allow
      allow_update: false
      name: pause
      path: /pause
    process_profile:
      baseline: zero-drift
    target:
      policymode: Protect
      selector:
        comment: ""
        criteria:
        - key: service
          op: =
          value: development-baseline-golang-baseline-golang-app.development
        - key: domain
          op: =
          value: development
        name: nv.development-baseline-golang-baseline-golang-app.development
        original_name: ""
    waf:
      settings: []
      status: true
# - apiVersion: neuvector.com/v1
#   kind: NvSecurityRule
#   metadata:
#     name: nv.rke2-ingress-nginx-controller.kube-system
#     namespace: kube-system
#   spec:
#     dlp:
#       settings: []
#       status: true
#     egress:
#     - action: allow
#       applications:
#       - HTTP
#       name: nv.rancher.cattle-system-egress-0
#       ports: any
#       priority: 0
#       selector:
#         comment: ""
#         criteria:
#         - key: service
#           op: =
#           value: rancher.cattle-system
#         - key: domain
#           op: =
#           value: cattle-system
#         name: nv.rancher.cattle-system
#         original_name: ""
#     file: []
#     ingress:
#     - action: allow
#       applications:
#       - HTTP
#       - SSL
#       name: nv.rke2-ingress-nginx-controller.kube-system-ingress-6
#       ports: any
#       priority: 0
#       selector:
#         comment: ""
#         criteria: []
#         name: nodes
#         original_name: ""
#     - action: allow
#       applications:
#       - HTTP
#       - SSL
#       name: nv.rke2-ingress-nginx-controller.kube-system-ingress-7
#       ports: any
#       priority: 0
#       selector:
#         comment: ""
#         criteria: []
#         name: external
#         original_name: ""
#     - action: allow
#       applications:
#       - any
#       name: nv.rke2-ingress-nginx-controller.kube-system-ingress-8
#       ports: tcp/443,tcp/80
#       priority: 0
#       selector:
#         comment: ""
#         criteria: []
#         name: external
#         original_name: ""
#     process:
#     - action: allow
#       allow_update: false
#       name: catatonit
#       path: /usr/bin/catatonit
#     - action: allow
#       allow_update: false
#       name: nginx
#       path: /usr/local/nginx/sbin/nginx
#     - action: allow
#       allow_update: false
#       name: nginx-ingress-controller
#       path: /nginx-ingress-controller
#     - action: allow
#       allow_update: false
#       name: pause
#       path: /pause
#     process_profile:
#       baseline: zero-drift
#     target:
#       policymode: Protect
#       selector:
#         comment: ""
#         criteria:
#         - key: service
#           op: =
#           value: rke2-ingress-nginx-controller.kube-system
#         - key: domain
#           op: =
#           value: kube-system
#         name: nv.rke2-ingress-nginx-controller.kube-system
#         original_name: ""
#     waf:
#       settings: []
#       status: true
kind: List
metadata: null
